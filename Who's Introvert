{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ae454a24",
   "metadata": {
    "papermill": {
     "duration": 0.005223,
     "end_time": "2025-07-04T03:53:15.827049",
     "exception": false,
     "start_time": "2025-07-04T03:53:15.821826",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Who's Introvert?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d658f7b",
   "metadata": {
    "papermill": {
     "duration": 0.003589,
     "end_time": "2025-07-04T03:53:15.834805",
     "exception": false,
     "start_time": "2025-07-04T03:53:15.831216",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Install Dependencies & Import Libs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3c4f3597",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:15.844703Z",
     "iopub.status.busy": "2025-07-04T03:53:15.843782Z",
     "iopub.status.idle": "2025-07-04T03:53:21.924365Z",
     "shell.execute_reply": "2025-07-04T03:53:21.923340Z"
    },
    "papermill": {
     "duration": 6.087686,
     "end_time": "2025-07-04T03:53:21.926408",
     "exception": false,
     "start_time": "2025-07-04T03:53:15.838722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Data Processing\n",
    "import polars as pl\n",
    "import numpy as np\n",
    "\n",
    "# Visualization\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly\n",
    "\n",
    "# ML & DL\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.impute import KNNImputer\n",
    "import xgboost as xgb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "21dd4b5f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:21.936326Z",
     "iopub.status.busy": "2025-07-04T03:53:21.935694Z",
     "iopub.status.idle": "2025-07-04T03:53:21.942006Z",
     "shell.execute_reply": "2025-07-04T03:53:21.941050Z"
    },
    "papermill": {
     "duration": 0.013152,
     "end_time": "2025-07-04T03:53:21.943678",
     "exception": false,
     "start_time": "2025-07-04T03:53:21.930526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "RANDOM_SEED = 2212550\n",
    "\n",
    "def seedBasic(seed=RANDOM_SEED):\n",
    "    random.seed(seed)\n",
    "    os.environ['PYTHONHASHSEED'] = str(seed)\n",
    "    np.random.seed(seed)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d83a7dcb",
   "metadata": {
    "papermill": {
     "duration": 0.003806,
     "end_time": "2025-07-04T03:53:21.951831",
     "exception": false,
     "start_time": "2025-07-04T03:53:21.948025",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Screening"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8e314e84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:21.961596Z",
     "iopub.status.busy": "2025-07-04T03:53:21.961242Z",
     "iopub.status.idle": "2025-07-04T03:53:22.195812Z",
     "shell.execute_reply": "2025-07-04T03:53:22.194721Z"
    },
    "papermill": {
     "duration": 0.241515,
     "end_time": "2025-07-04T03:53:22.197530",
     "exception": false,
     "start_time": "2025-07-04T03:53:21.956015",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (5, 8)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>id</th><th>Time_spent_Alone</th><th>Stage_fear</th><th>Social_event_attendance</th><th>Going_outside</th><th>Drained_after_socializing</th><th>Friends_circle_size</th><th>Post_frequency</th></tr><tr><td>i64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>0</td><td>0.0</td><td>&quot;No&quot;</td><td>6.0</td><td>4.0</td><td>&quot;No&quot;</td><td>15.0</td><td>5.0</td></tr><tr><td>1</td><td>1.0</td><td>&quot;No&quot;</td><td>7.0</td><td>3.0</td><td>&quot;No&quot;</td><td>10.0</td><td>8.0</td></tr><tr><td>2</td><td>6.0</td><td>&quot;Yes&quot;</td><td>1.0</td><td>0.0</td><td>null</td><td>3.0</td><td>0.0</td></tr><tr><td>3</td><td>3.0</td><td>&quot;No&quot;</td><td>7.0</td><td>3.0</td><td>&quot;No&quot;</td><td>11.0</td><td>5.0</td></tr><tr><td>4</td><td>1.0</td><td>&quot;No&quot;</td><td>4.0</td><td>4.0</td><td>&quot;No&quot;</td><td>13.0</td><td>null</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (5, 8)\n",
       "┌─────┬─────────────┬────────────┬─────────────┬────────────┬────────────┬────────────┬────────────┐\n",
       "│ id  ┆ Time_spent_ ┆ Stage_fear ┆ Social_even ┆ Going_outs ┆ Drained_af ┆ Friends_ci ┆ Post_frequ │\n",
       "│ --- ┆ Alone       ┆ ---        ┆ t_attendanc ┆ ide        ┆ ter_social ┆ rcle_size  ┆ ency       │\n",
       "│ i64 ┆ ---         ┆ str        ┆ e           ┆ ---        ┆ izing      ┆ ---        ┆ ---        │\n",
       "│     ┆ f64         ┆            ┆ ---         ┆ f64        ┆ ---        ┆ f64        ┆ f64        │\n",
       "│     ┆             ┆            ┆ f64         ┆            ┆ str        ┆            ┆            │\n",
       "╞═════╪═════════════╪════════════╪═════════════╪════════════╪════════════╪════════════╪════════════╡\n",
       "│ 0   ┆ 0.0         ┆ No         ┆ 6.0         ┆ 4.0        ┆ No         ┆ 15.0       ┆ 5.0        │\n",
       "│ 1   ┆ 1.0         ┆ No         ┆ 7.0         ┆ 3.0        ┆ No         ┆ 10.0       ┆ 8.0        │\n",
       "│ 2   ┆ 6.0         ┆ Yes        ┆ 1.0         ┆ 0.0        ┆ null       ┆ 3.0        ┆ 0.0        │\n",
       "│ 3   ┆ 3.0         ┆ No         ┆ 7.0         ┆ 3.0        ┆ No         ┆ 11.0       ┆ 5.0        │\n",
       "│ 4   ┆ 1.0         ┆ No         ┆ 4.0         ┆ 4.0        ┆ No         ┆ 13.0       ┆ null       │\n",
       "└─────┴─────────────┴────────────┴─────────────┴────────────┴────────────┴────────────┴────────────┘"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train = pl.read_csv(\"/kaggle/input/playground-series-s5e7/train.csv\")\n",
    "test = pl.read_csv(\"/kaggle/input/playground-series-s5e7/test.csv\")\n",
    "\n",
    "labels = train[\"Personality\"]\n",
    "train = train.drop(\"Personality\")\n",
    "\n",
    "train.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3a65f5be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.208127Z",
     "iopub.status.busy": "2025-07-04T03:53:22.207790Z",
     "iopub.status.idle": "2025-07-04T03:53:22.214015Z",
     "shell.execute_reply": "2025-07-04T03:53:22.213043Z"
    },
    "papermill": {
     "duration": 0.01347,
     "end_time": "2025-07-04T03:53:22.215657",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.202187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(18524, 8)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "94b41906",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.226660Z",
     "iopub.status.busy": "2025-07-04T03:53:22.225809Z",
     "iopub.status.idle": "2025-07-04T03:53:22.233141Z",
     "shell.execute_reply": "2025-07-04T03:53:22.232327Z"
    },
    "papermill": {
     "duration": 0.014381,
     "end_time": "2025-07-04T03:53:22.234574",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.220193",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (18_524,)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>Personality</th></tr><tr><td>str</td></tr></thead><tbody><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&quot;Introvert&quot;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&hellip;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr><tr><td>&quot;Introvert&quot;</td></tr><tr><td>&quot;Introvert&quot;</td></tr><tr><td>&quot;Extrovert&quot;</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (18_524,)\n",
       "Series: 'Personality' [str]\n",
       "[\n",
       "\t\"Extrovert\"\n",
       "\t\"Extrovert\"\n",
       "\t\"Introvert\"\n",
       "\t\"Extrovert\"\n",
       "\t\"Extrovert\"\n",
       "\t…\n",
       "\t\"Extrovert\"\n",
       "\t\"Extrovert\"\n",
       "\t\"Introvert\"\n",
       "\t\"Introvert\"\n",
       "\t\"Extrovert\"\n",
       "]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "35a449c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.245104Z",
     "iopub.status.busy": "2025-07-04T03:53:22.244770Z",
     "iopub.status.idle": "2025-07-04T03:53:22.251688Z",
     "shell.execute_reply": "2025-07-04T03:53:22.250807Z"
    },
    "papermill": {
     "duration": 0.013598,
     "end_time": "2025-07-04T03:53:22.253071",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.239473",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (5, 8)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>id</th><th>Time_spent_Alone</th><th>Stage_fear</th><th>Social_event_attendance</th><th>Going_outside</th><th>Drained_after_socializing</th><th>Friends_circle_size</th><th>Post_frequency</th></tr><tr><td>i64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>18524</td><td>3.0</td><td>&quot;No&quot;</td><td>7.0</td><td>4.0</td><td>&quot;No&quot;</td><td>6.0</td><td>null</td></tr><tr><td>18525</td><td>null</td><td>&quot;Yes&quot;</td><td>0.0</td><td>0.0</td><td>&quot;Yes&quot;</td><td>5.0</td><td>1.0</td></tr><tr><td>18526</td><td>3.0</td><td>&quot;No&quot;</td><td>5.0</td><td>6.0</td><td>&quot;No&quot;</td><td>15.0</td><td>9.0</td></tr><tr><td>18527</td><td>3.0</td><td>&quot;No&quot;</td><td>4.0</td><td>4.0</td><td>&quot;No&quot;</td><td>5.0</td><td>6.0</td></tr><tr><td>18528</td><td>9.0</td><td>&quot;Yes&quot;</td><td>1.0</td><td>2.0</td><td>&quot;Yes&quot;</td><td>1.0</td><td>1.0</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (5, 8)\n",
       "┌───────┬────────────┬────────────┬────────────┬────────────┬────────────┬────────────┬────────────┐\n",
       "│ id    ┆ Time_spent ┆ Stage_fear ┆ Social_eve ┆ Going_outs ┆ Drained_af ┆ Friends_ci ┆ Post_frequ │\n",
       "│ ---   ┆ _Alone     ┆ ---        ┆ nt_attenda ┆ ide        ┆ ter_social ┆ rcle_size  ┆ ency       │\n",
       "│ i64   ┆ ---        ┆ str        ┆ nce        ┆ ---        ┆ izing      ┆ ---        ┆ ---        │\n",
       "│       ┆ f64        ┆            ┆ ---        ┆ f64        ┆ ---        ┆ f64        ┆ f64        │\n",
       "│       ┆            ┆            ┆ f64        ┆            ┆ str        ┆            ┆            │\n",
       "╞═══════╪════════════╪════════════╪════════════╪════════════╪════════════╪════════════╪════════════╡\n",
       "│ 18524 ┆ 3.0        ┆ No         ┆ 7.0        ┆ 4.0        ┆ No         ┆ 6.0        ┆ null       │\n",
       "│ 18525 ┆ null       ┆ Yes        ┆ 0.0        ┆ 0.0        ┆ Yes        ┆ 5.0        ┆ 1.0        │\n",
       "│ 18526 ┆ 3.0        ┆ No         ┆ 5.0        ┆ 6.0        ┆ No         ┆ 15.0       ┆ 9.0        │\n",
       "│ 18527 ┆ 3.0        ┆ No         ┆ 4.0        ┆ 4.0        ┆ No         ┆ 5.0        ┆ 6.0        │\n",
       "│ 18528 ┆ 9.0        ┆ Yes        ┆ 1.0        ┆ 2.0        ┆ Yes        ┆ 1.0        ┆ 1.0        │\n",
       "└───────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┘"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b14b4a4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.264023Z",
     "iopub.status.busy": "2025-07-04T03:53:22.263642Z",
     "iopub.status.idle": "2025-07-04T03:53:22.282273Z",
     "shell.execute_reply": "2025-07-04T03:53:22.281343Z"
    },
    "papermill": {
     "duration": 0.026196,
     "end_time": "2025-07-04T03:53:22.283995",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.257799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24699, 8)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = pl.concat([train, test])\n",
    "dataset.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bc4184a",
   "metadata": {
    "papermill": {
     "duration": 0.004418,
     "end_time": "2025-07-04T03:53:22.293513",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.289095",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Fill Missing Values 🔩"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bfdbacad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.304957Z",
     "iopub.status.busy": "2025-07-04T03:53:22.304564Z",
     "iopub.status.idle": "2025-07-04T03:53:22.363598Z",
     "shell.execute_reply": "2025-07-04T03:53:22.362634Z"
    },
    "papermill": {
     "duration": 0.067115,
     "end_time": "2025-07-04T03:53:22.365287",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.298172",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (9, 9)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>statistic</th><th>id</th><th>Time_spent_Alone</th><th>Stage_fear</th><th>Social_event_attendance</th><th>Going_outside</th><th>Drained_after_socializing</th><th>Friends_circle_size</th><th>Post_frequency</th></tr><tr><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>&quot;count&quot;</td><td>24699.0</td><td>23084.0</td><td>&quot;22208&quot;</td><td>23122.0</td><td>22767.0</td><td>&quot;23118&quot;</td><td>23295.0</td><td>23027.0</td></tr><tr><td>&quot;null_count&quot;</td><td>0.0</td><td>1615.0</td><td>&quot;2491&quot;</td><td>1577.0</td><td>1932.0</td><td>&quot;1581&quot;</td><td>1404.0</td><td>1672.0</td></tr><tr><td>&quot;mean&quot;</td><td>12349.0</td><td>3.132559</td><td>null</td><td>5.270824</td><td>4.042693</td><td>null</td><td>7.999657</td><td>4.993833</td></tr><tr><td>&quot;std&quot;</td><td>7130.131485</td><td>2.99923</td><td>null</td><td>2.754491</td><td>2.058194</td><td>null</td><td>4.215721</td><td>2.876184</td></tr><tr><td>&quot;min&quot;</td><td>0.0</td><td>0.0</td><td>&quot;No&quot;</td><td>0.0</td><td>0.0</td><td>&quot;No&quot;</td><td>0.0</td><td>0.0</td></tr><tr><td>&quot;25%&quot;</td><td>6175.0</td><td>1.0</td><td>null</td><td>3.0</td><td>3.0</td><td>null</td><td>5.0</td><td>3.0</td></tr><tr><td>&quot;50%&quot;</td><td>12349.0</td><td>2.0</td><td>null</td><td>5.0</td><td>4.0</td><td>null</td><td>8.0</td><td>5.0</td></tr><tr><td>&quot;75%&quot;</td><td>18524.0</td><td>4.0</td><td>null</td><td>8.0</td><td>6.0</td><td>null</td><td>12.0</td><td>7.0</td></tr><tr><td>&quot;max&quot;</td><td>24698.0</td><td>11.0</td><td>&quot;Yes&quot;</td><td>10.0</td><td>7.0</td><td>&quot;Yes&quot;</td><td>15.0</td><td>10.0</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (9, 9)\n",
       "┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n",
       "│ statistic ┆ id        ┆ Time_spen ┆ Stage_fea ┆ … ┆ Going_out ┆ Drained_a ┆ Friends_c ┆ Post_fre │\n",
       "│ ---       ┆ ---       ┆ t_Alone   ┆ r         ┆   ┆ side      ┆ fter_soci ┆ ircle_siz ┆ quency   │\n",
       "│ str       ┆ f64       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ alizing   ┆ e         ┆ ---      │\n",
       "│           ┆           ┆ f64       ┆ str       ┆   ┆ f64       ┆ ---       ┆ ---       ┆ f64      │\n",
       "│           ┆           ┆           ┆           ┆   ┆           ┆ str       ┆ f64       ┆          │\n",
       "╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n",
       "│ count     ┆ 24699.0   ┆ 23084.0   ┆ 22208     ┆ … ┆ 22767.0   ┆ 23118     ┆ 23295.0   ┆ 23027.0  │\n",
       "│ null_coun ┆ 0.0       ┆ 1615.0    ┆ 2491      ┆ … ┆ 1932.0    ┆ 1581      ┆ 1404.0    ┆ 1672.0   │\n",
       "│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
       "│ mean      ┆ 12349.0   ┆ 3.132559  ┆ null      ┆ … ┆ 4.042693  ┆ null      ┆ 7.999657  ┆ 4.993833 │\n",
       "│ std       ┆ 7130.1314 ┆ 2.99923   ┆ null      ┆ … ┆ 2.058194  ┆ null      ┆ 4.215721  ┆ 2.876184 │\n",
       "│           ┆ 85        ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
       "│ min       ┆ 0.0       ┆ 0.0       ┆ No        ┆ … ┆ 0.0       ┆ No        ┆ 0.0       ┆ 0.0      │\n",
       "│ 25%       ┆ 6175.0    ┆ 1.0       ┆ null      ┆ … ┆ 3.0       ┆ null      ┆ 5.0       ┆ 3.0      │\n",
       "│ 50%       ┆ 12349.0   ┆ 2.0       ┆ null      ┆ … ┆ 4.0       ┆ null      ┆ 8.0       ┆ 5.0      │\n",
       "│ 75%       ┆ 18524.0   ┆ 4.0       ┆ null      ┆ … ┆ 6.0       ┆ null      ┆ 12.0      ┆ 7.0      │\n",
       "│ max       ┆ 24698.0   ┆ 11.0      ┆ Yes       ┆ … ┆ 7.0       ┆ Yes       ┆ 15.0      ┆ 10.0     │\n",
       "└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09a40485",
   "metadata": {
    "papermill": {
     "duration": 0.005189,
     "end_time": "2025-07-04T03:53:22.375644",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.370455",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We may need to label encode first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "19a3c44e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.388772Z",
     "iopub.status.busy": "2025-07-04T03:53:22.388411Z",
     "iopub.status.idle": "2025-07-04T03:53:22.399635Z",
     "shell.execute_reply": "2025-07-04T03:53:22.398505Z"
    },
    "papermill": {
     "duration": 0.019697,
     "end_time": "2025-07-04T03:53:22.401433",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.381736",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (3,)\n",
      "Series: 'Stage_fear' [str]\n",
      "[\n",
      "\t\"Yes\"\n",
      "\t\"No\"\n",
      "\tnull\n",
      "]\n",
      "shape: (3,)\n",
      "Series: 'Drained_after_socializing' [str]\n",
      "[\n",
      "\tnull\n",
      "\t\"Yes\"\n",
      "\t\"No\"\n",
      "]\n"
     ]
    }
   ],
   "source": [
    "for col in dataset.columns:\n",
    "    if str(dataset[col].dtype) == \"String\":\n",
    "        print(dataset[col].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ae2d8d31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.414805Z",
     "iopub.status.busy": "2025-07-04T03:53:22.413887Z",
     "iopub.status.idle": "2025-07-04T03:53:22.451395Z",
     "shell.execute_reply": "2025-07-04T03:53:22.450439Z"
    },
    "papermill": {
     "duration": 0.045565,
     "end_time": "2025-07-04T03:53:22.453128",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.407563",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (5, 8)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>id</th><th>Time_spent_Alone</th><th>Stage_fear</th><th>Social_event_attendance</th><th>Going_outside</th><th>Drained_after_socializing</th><th>Friends_circle_size</th><th>Post_frequency</th></tr><tr><td>i64</td><td>f64</td><td>i64</td><td>f64</td><td>f64</td><td>i64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>0</td><td>0.0</td><td>0</td><td>6.0</td><td>4.0</td><td>0</td><td>15.0</td><td>5.0</td></tr><tr><td>1</td><td>1.0</td><td>0</td><td>7.0</td><td>3.0</td><td>0</td><td>10.0</td><td>8.0</td></tr><tr><td>2</td><td>6.0</td><td>1</td><td>1.0</td><td>0.0</td><td>2</td><td>3.0</td><td>0.0</td></tr><tr><td>3</td><td>3.0</td><td>0</td><td>7.0</td><td>3.0</td><td>0</td><td>11.0</td><td>5.0</td></tr><tr><td>4</td><td>1.0</td><td>0</td><td>4.0</td><td>4.0</td><td>0</td><td>13.0</td><td>null</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (5, 8)\n",
       "┌─────┬─────────────┬────────────┬─────────────┬────────────┬────────────┬────────────┬────────────┐\n",
       "│ id  ┆ Time_spent_ ┆ Stage_fear ┆ Social_even ┆ Going_outs ┆ Drained_af ┆ Friends_ci ┆ Post_frequ │\n",
       "│ --- ┆ Alone       ┆ ---        ┆ t_attendanc ┆ ide        ┆ ter_social ┆ rcle_size  ┆ ency       │\n",
       "│ i64 ┆ ---         ┆ i64        ┆ e           ┆ ---        ┆ izing      ┆ ---        ┆ ---        │\n",
       "│     ┆ f64         ┆            ┆ ---         ┆ f64        ┆ ---        ┆ f64        ┆ f64        │\n",
       "│     ┆             ┆            ┆ f64         ┆            ┆ i64        ┆            ┆            │\n",
       "╞═════╪═════════════╪════════════╪═════════════╪════════════╪════════════╪════════════╪════════════╡\n",
       "│ 0   ┆ 0.0         ┆ 0          ┆ 6.0         ┆ 4.0        ┆ 0          ┆ 15.0       ┆ 5.0        │\n",
       "│ 1   ┆ 1.0         ┆ 0          ┆ 7.0         ┆ 3.0        ┆ 0          ┆ 10.0       ┆ 8.0        │\n",
       "│ 2   ┆ 6.0         ┆ 1          ┆ 1.0         ┆ 0.0        ┆ 2          ┆ 3.0        ┆ 0.0        │\n",
       "│ 3   ┆ 3.0         ┆ 0          ┆ 7.0         ┆ 3.0        ┆ 0          ┆ 11.0       ┆ 5.0        │\n",
       "│ 4   ┆ 1.0         ┆ 0          ┆ 4.0         ┆ 4.0        ┆ 0          ┆ 13.0       ┆ null       │\n",
       "└─────┴─────────────┴────────────┴─────────────┴────────────┴────────────┴────────────┴────────────┘"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def encode_category_label(df):\n",
    "    # encode category features by LabelEncoder\n",
    "    for col in df.columns:\n",
    "        if str(df[col].dtype) == \"String\":\n",
    "            encoder = LabelEncoder()\n",
    "            encoded_col= pl.Series(encoder.fit_transform(df[col].to_numpy()))\n",
    "            df = df.with_columns(encoded_col.alias(col))\n",
    "    return df\n",
    "\n",
    "dataset = encode_category_label(dataset)\n",
    "dataset.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cde9d627",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:22.466043Z",
     "iopub.status.busy": "2025-07-04T03:53:22.465003Z",
     "iopub.status.idle": "2025-07-04T03:53:36.426109Z",
     "shell.execute_reply": "2025-07-04T03:53:36.425001Z"
    },
    "papermill": {
     "duration": 13.969264,
     "end_time": "2025-07-04T03:53:36.427758",
     "exception": false,
     "start_time": "2025-07-04T03:53:22.458494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (24_699, 8)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>id</th><th>Time_spent_Alone</th><th>Stage_fear</th><th>Social_event_attendance</th><th>Going_outside</th><th>Drained_after_socializing</th><th>Friends_circle_size</th><th>Post_frequency</th></tr><tr><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>0.0</td><td>0.0</td><td>0.0</td><td>6.0</td><td>4.0</td><td>0.0</td><td>15.0</td><td>5.0</td></tr><tr><td>1.0</td><td>1.0</td><td>0.0</td><td>7.0</td><td>3.0</td><td>0.0</td><td>10.0</td><td>8.0</td></tr><tr><td>2.0</td><td>6.0</td><td>1.0</td><td>1.0</td><td>0.0</td><td>2.0</td><td>3.0</td><td>0.0</td></tr><tr><td>3.0</td><td>3.0</td><td>0.0</td><td>7.0</td><td>3.0</td><td>0.0</td><td>11.0</td><td>5.0</td></tr><tr><td>4.0</td><td>1.0</td><td>0.0</td><td>4.0</td><td>4.0</td><td>0.0</td><td>13.0</td><td>5.0</td></tr><tr><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td><td>&hellip;</td></tr><tr><td>24694.0</td><td>3.0</td><td>0.0</td><td>5.0</td><td>5.0</td><td>0.0</td><td>9.0</td><td>6.0</td></tr><tr><td>24695.0</td><td>8.0</td><td>1.0</td><td>2.0</td><td>1.0</td><td>1.0</td><td>0.0</td><td>0.0</td></tr><tr><td>24696.0</td><td>2.0</td><td>0.0</td><td>4.0</td><td>3.0</td><td>0.0</td><td>9.0</td><td>7.0</td></tr><tr><td>24697.0</td><td>3.0</td><td>0.0</td><td>4.0</td><td>4.0</td><td>0.0</td><td>11.0</td><td>9.0</td></tr><tr><td>24698.0</td><td>3.4</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>0.0</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (24_699, 8)\n",
       "┌─────────┬────────────┬────────────┬────────────┬────────────┬────────────┬───────────┬───────────┐\n",
       "│ id      ┆ Time_spent ┆ Stage_fear ┆ Social_eve ┆ Going_outs ┆ Drained_af ┆ Friends_c ┆ Post_freq │\n",
       "│ ---     ┆ _Alone     ┆ ---        ┆ nt_attenda ┆ ide        ┆ ter_social ┆ ircle_siz ┆ uency     │\n",
       "│ f64     ┆ ---        ┆ f64        ┆ nce        ┆ ---        ┆ izing      ┆ e         ┆ ---       │\n",
       "│         ┆ f64        ┆            ┆ ---        ┆ f64        ┆ ---        ┆ ---       ┆ f64       │\n",
       "│         ┆            ┆            ┆ f64        ┆            ┆ f64        ┆ f64       ┆           │\n",
       "╞═════════╪════════════╪════════════╪════════════╪════════════╪════════════╪═══════════╪═══════════╡\n",
       "│ 0.0     ┆ 0.0        ┆ 0.0        ┆ 6.0        ┆ 4.0        ┆ 0.0        ┆ 15.0      ┆ 5.0       │\n",
       "│ 1.0     ┆ 1.0        ┆ 0.0        ┆ 7.0        ┆ 3.0        ┆ 0.0        ┆ 10.0      ┆ 8.0       │\n",
       "│ 2.0     ┆ 6.0        ┆ 1.0        ┆ 1.0        ┆ 0.0        ┆ 2.0        ┆ 3.0       ┆ 0.0       │\n",
       "│ 3.0     ┆ 3.0        ┆ 0.0        ┆ 7.0        ┆ 3.0        ┆ 0.0        ┆ 11.0      ┆ 5.0       │\n",
       "│ 4.0     ┆ 1.0        ┆ 0.0        ┆ 4.0        ┆ 4.0        ┆ 0.0        ┆ 13.0      ┆ 5.0       │\n",
       "│ …       ┆ …          ┆ …          ┆ …          ┆ …          ┆ …          ┆ …         ┆ …         │\n",
       "│ 24694.0 ┆ 3.0        ┆ 0.0        ┆ 5.0        ┆ 5.0        ┆ 0.0        ┆ 9.0       ┆ 6.0       │\n",
       "│ 24695.0 ┆ 8.0        ┆ 1.0        ┆ 2.0        ┆ 1.0        ┆ 1.0        ┆ 0.0       ┆ 0.0       │\n",
       "│ 24696.0 ┆ 2.0        ┆ 0.0        ┆ 4.0        ┆ 3.0        ┆ 0.0        ┆ 9.0       ┆ 7.0       │\n",
       "│ 24697.0 ┆ 3.0        ┆ 0.0        ┆ 4.0        ┆ 4.0        ┆ 0.0        ┆ 11.0      ┆ 9.0       │\n",
       "│ 24698.0 ┆ 3.4        ┆ 1.0        ┆ 1.0        ┆ 1.0        ┆ 1.0        ┆ 1.0       ┆ 0.0       │\n",
       "└─────────┴────────────┴────────────┴────────────┴────────────┴────────────┴───────────┴───────────┘"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def fill_NaN_values(df):\n",
    "    # fill NaN values for numeric features\n",
    "    imputer = KNNImputer()\n",
    "    imputed_df = imputer.fit_transform(df.to_numpy())\n",
    "    df = pl.DataFrame(imputed_df, schema=df.columns)\n",
    "    return df\n",
    "\n",
    "dataset = fill_NaN_values(dataset)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f4870ce",
   "metadata": {
    "papermill": {
     "duration": 0.004983,
     "end_time": "2025-07-04T03:53:36.438526",
     "exception": false,
     "start_time": "2025-07-04T03:53:36.433543",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model Training 🤖"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a16ae9c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:36.450737Z",
     "iopub.status.busy": "2025-07-04T03:53:36.450331Z",
     "iopub.status.idle": "2025-07-04T03:53:36.456532Z",
     "shell.execute_reply": "2025-07-04T03:53:36.455542Z"
    },
    "papermill": {
     "duration": 0.014415,
     "end_time": "2025-07-04T03:53:36.458200",
     "exception": false,
     "start_time": "2025-07-04T03:53:36.443785",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = dataset[:18524].to_numpy()\n",
    "y = labels.to_numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2f84b7cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:36.471415Z",
     "iopub.status.busy": "2025-07-04T03:53:36.470408Z",
     "iopub.status.idle": "2025-07-04T03:53:38.395372Z",
     "shell.execute_reply": "2025-07-04T03:53:38.394365Z"
    },
    "papermill": {
     "duration": 1.933102,
     "end_time": "2025-07-04T03:53:38.396962",
     "exception": false,
     "start_time": "2025-07-04T03:53:36.463860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=2212550)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=2212550)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(random_state=2212550)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = RandomForestClassifier(random_state=RANDOM_SEED)\n",
    "model.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6ba11d5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:38.409337Z",
     "iopub.status.busy": "2025-07-04T03:53:38.408938Z",
     "iopub.status.idle": "2025-07-04T03:53:38.498541Z",
     "shell.execute_reply": "2025-07-04T03:53:38.497619Z"
    },
    "papermill": {
     "duration": 0.097384,
     "end_time": "2025-07-04T03:53:38.500016",
     "exception": false,
     "start_time": "2025-07-04T03:53:38.402632",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Extrovert', 'Introvert', 'Extrovert', ..., 'Extrovert',\n",
       "       'Extrovert', 'Introvert'], dtype=object)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = model.predict(dataset[18524:].to_numpy())\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e95eac68",
   "metadata": {
    "papermill": {
     "duration": 0.005242,
     "end_time": "2025-07-04T03:53:38.511092",
     "exception": false,
     "start_time": "2025-07-04T03:53:38.505850",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4450b975",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:38.523506Z",
     "iopub.status.busy": "2025-07-04T03:53:38.523125Z",
     "iopub.status.idle": "2025-07-04T03:53:38.539156Z",
     "shell.execute_reply": "2025-07-04T03:53:38.537993Z"
    },
    "papermill": {
     "duration": 0.024381,
     "end_time": "2025-07-04T03:53:38.540852",
     "exception": false,
     "start_time": "2025-07-04T03:53:38.516471",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (6_175, 2)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>id</th><th>Personality</th></tr><tr><td>i64</td><td>str</td></tr></thead><tbody><tr><td>18524</td><td>&quot;Extrovert&quot;</td></tr><tr><td>18525</td><td>&quot;Introvert&quot;</td></tr><tr><td>18526</td><td>&quot;Extrovert&quot;</td></tr><tr><td>18527</td><td>&quot;Extrovert&quot;</td></tr><tr><td>18528</td><td>&quot;Introvert&quot;</td></tr><tr><td>&hellip;</td><td>&hellip;</td></tr><tr><td>24694</td><td>&quot;Extrovert&quot;</td></tr><tr><td>24695</td><td>&quot;Introvert&quot;</td></tr><tr><td>24696</td><td>&quot;Extrovert&quot;</td></tr><tr><td>24697</td><td>&quot;Extrovert&quot;</td></tr><tr><td>24698</td><td>&quot;Introvert&quot;</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (6_175, 2)\n",
       "┌───────┬─────────────┐\n",
       "│ id    ┆ Personality │\n",
       "│ ---   ┆ ---         │\n",
       "│ i64   ┆ str         │\n",
       "╞═══════╪═════════════╡\n",
       "│ 18524 ┆ Extrovert   │\n",
       "│ 18525 ┆ Introvert   │\n",
       "│ 18526 ┆ Extrovert   │\n",
       "│ 18527 ┆ Extrovert   │\n",
       "│ 18528 ┆ Introvert   │\n",
       "│ …     ┆ …           │\n",
       "│ 24694 ┆ Extrovert   │\n",
       "│ 24695 ┆ Introvert   │\n",
       "│ 24696 ┆ Extrovert   │\n",
       "│ 24697 ┆ Extrovert   │\n",
       "│ 24698 ┆ Introvert   │\n",
       "└───────┴─────────────┘"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission = pl.read_csv('/kaggle/input/playground-series-s5e7/sample_submission.csv')\n",
    "submission = submission.with_columns(pl.Series(y_pred).alias('Personality'))\n",
    "submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "84c02c8d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-04T03:53:38.553857Z",
     "iopub.status.busy": "2025-07-04T03:53:38.553508Z",
     "iopub.status.idle": "2025-07-04T03:53:38.567468Z",
     "shell.execute_reply": "2025-07-04T03:53:38.566511Z"
    },
    "papermill": {
     "duration": 0.022413,
     "end_time": "2025-07-04T03:53:38.569320",
     "exception": false,
     "start_time": "2025-07-04T03:53:38.546907",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission.write_csv('submission.csv')"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 12738969,
     "sourceId": 91718,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 28.659701,
   "end_time": "2025-07-04T03:53:39.396404",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-04T03:53:10.736703",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
